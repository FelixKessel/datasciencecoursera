makeMatrix(A)
makeMatrix()  A
makeMatrix() A
makeMatrix()
makeMatrix(A = matrix())
makeMatrix(c(1,3,5,4,5,6,7,3,4), nrow=3, ncol=3)
makeMatrix(c(1,3,5,4,5,6,7,3,4))
cacheSolve <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
cacheSolve(A)
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
best <- function(state, outcome){
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
#Error handling: If no valid state is requested, an error message is shown
all_states <- unique(all_data$State)
if (!state %in% all_states) stop("invalid state")
#Select data with requested state
state_data <- all_data[all_data$State == state,]
#Select column with requested outcome and calculate results
if (outcome == "heart attack") {
heart_attack <- state_data[,c(2,11)]
colnames(heart_attack) <- c('Hospital', 'Outcome')
heart_attack$Hospital <- as.character(as.character(heart_attack$Hospital))
heart_attack$Outcome <- as.numeric(as.character(heart_attack$Outcome))
heart_attack <- heart_attack[!is.na(heart_attack$Outcome),]
sort_ha <- heart_attack[order(heart_attack$Outcome, heart_attack$Hospital), ]
best_ha <- sort_ha[1,1]
return (best_ha)
}
if (outcome == "heart failure") {
heart_failure <- state_data[,c(2,17)]
colnames(heart_failure) <- c('Hospital', 'Outcome')
heart_failure$Hospital <- as.character(as.character(heart_failure$Hospital))
heart_failure$Outcome <- as.numeric(as.character(heart_failure$Outcome))
heart_failure <- heart_failure[!is.na(heart_failure$Outcome),]
sort_hf <- heart_failure[order(heart_failure$Outcome, heart_failure$Hospital), ]
best_hf <- sort_hf[1,1]
return (best_hf)
}
if (outcome == "pneumonia") {
pneumonia <- state_data[,c(2,23)]
colnames(pneumonia) <- c('Hospital', 'Outcome')
pneumonia$Hospital <- as.character(as.character(pneumonia$Hospital))
pneumonia$Outcome <- as.numeric(as.character(pneumonia$Outcome))
pneumonia  <- pneumonia[!is.na(pneumonia$Outcome),]
sort_pn <- pneumonia[order(pneumonia$Outcome, pneumonia$Hospital), ]
best_pn <- sort_pn[1,1]
return (best_pn)
}
#Error handling: If no valid outcome is requested, an error message is shown
else stop("invalid outcome")
}
best("TX", "heart failure")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that state and outcome are valid
all_states <- unique(all_data$State)
if (!state %in% all_states) stop("invalid state")
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
## Return hospital name in that state with the given rank
# Select data with requested state
state_data <- all_data[all_data$State == state,]
# Select data with requested outcome
if (outcome == "heart attack") ranked_data <- state_data[,c(2,11)]
if (outcome == "heart failure") ranked_data <- state_data[,c(2,17)]
if (outcome == "pneumonia") ranked_data <- state_data[,c(2,23)]
## Rank data
colnames(ranked_data) <- c('Hospital.Name', 'Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
ranked_data <- ranked_data[!is.na(ranked_data$Rate),]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
rank_x <- ranked_data[num,1]
return (rank_x)
}
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
all_states <- unique(all_data$State)
all_states <- as.character(as.character(unique(all_data$State)))
View(all_data)
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") ranked_data <- state_data[,c(2,7,11)]
if (outcome == "heart failure") ranked_data <- state_data[,c(2,7,17)]
if (outcome == "pneumonia") ranked_data <- state_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count,] <- ranked_data[num,1:2]
count <- count + 1
}
return (rank_x)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") ranked_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") ranked_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") ranked_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count,] <- ranked_data[num,1:2]
count <- count + 1
}
return (rank_x)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") ranked_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") ranked_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") ranked_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
rank_x <- c()
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count,] <- ranked_data[num,1:2]
count <- count + 1
}
return (rank_x)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") ranked_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") ranked_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") ranked_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
rank_x <- c()
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count,] <- ranked_data[num,c(1,2)]
count <- count + 1
}
return (rank_x)
}
head(rankall("heart attack", 20), 10)
rank_x <- c()
colnames(rank_x) <- c('Hospital','State')
rank_x <- matrix(c(),nrow = nrow(all_states),ncol=2)
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
all_states <- as.character(as.character(unique(all_data$State)))
rank_x <- matrix(c(),nrow = nrow(all_states),ncol=2)
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") ranked_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") ranked_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") ranked_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
rank_x <- c()
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count] <- ranked_data[num,c(1,2)]
count <- count + 1
}
colnames(rank_x) <- c('Hospital','State')
return (rank_x)
}
head(rankall("heart attack", 20), 10)
outcome="heart attack"
if (outcome == "heart attack") ranked_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") ranked_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") ranked_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
rank_x <- c()
if (outcome == "heart attack") ranked_data <- all_data[,c(2,7,11)]
View(ranked_data)
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
ranked_data$Hospital.Name <- as.character(as.character(ranked_data$Hospital.Name))
ranked_data$State <- as.character(as.character(ranked_data$State))
ranked_data$Rate <- as.numeric(as.character(ranked_data$Rate))
View(ranked_data)
count <- 1
rank_x <- c()
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count] <- ranked_data[num,c(1,2)]
count <- count + 1
}
num=2
for (i in all_states){
ranked_data <- ranked_data[ranked_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count] <- ranked_data[num,c(1,2)]
count <- count + 1
}
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
if (outcome == "heart attack") all_data <- all_data[,c(2,7,11)]
colnames(ranked_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
View(all_data)
s
colnames(all_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
count <- 1
rank_x <- c()
for (i in all_states){
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
rank_x[count] <- ranked_data[num,c(1,2)]
count <- count + 1
}
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") all_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") all_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") all_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(all_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
hosp <- c()
state <- c()
for (i in all_states){
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
hosp[count] <- ranked_data[num,1]
state[count] <- i
count <- count + 1
}
compl <- data.frame(Hospital = hosp, State = state)
return (compl)
}
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") all_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") all_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") all_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(all_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
## Rank data
count <- 1
hosp <- c()
state <- c()
for (i in all_states){
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
hosp[count] <- ranked_data[num,1]
state[count] <- i
count <- count + 1
}
compl <- data.frame(Hospital = hosp, State = state)
return (compl)
}
head(rankall("heart attack", 20), 10)
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
all_states <- as.character(as.character(unique(all_data$State)))
all_states <- all_states[order(all_states), ]
all_states <- all_states[order(all_states) ]
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") all_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") all_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") all_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(all_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
all_states <- all_states[order(all_states) ]
## Rank data
count <- 1
hosp <- c()
state <- c()
for (i in all_states){
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
hosp[count] <- ranked_data[num,1]
state[count] <- i
count <- count + 1
}
compl <- data.frame(Hospital = hosp, State = state)
return (compl)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
## Check that outcome is valid
all_outcomes <- c("heart attack", "heart failure" , "pneumonia")
if (!outcome %in% all_outcomes) stop("invalid outcome")
# Select data with requested outcome
if (outcome == "heart attack") all_data <- all_data[,c(2,7,11)]
if (outcome == "heart failure") all_data <- all_data[,c(2,7,17)]
if (outcome == "pneumonia") all_data <- all_data[,c(2,7,23)]
# Transform Factors into characters and numerics
colnames(all_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
all_states <- all_states[order(all_states) ]
## Rank data
count <- 1
hosp <- c()
state <- c()
for (i in all_states){
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
## Define rank for worst and best scenario
if (num == "best") num <- 1
if (num == "worst") num <- nrow(ranked_data)
hosp[count] <- ranked_data[num,1]
state[count] <- i
count <- count + 1
}
compl <- data.frame(Hospital = hosp, State = state)
return (compl)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
state="WY"
i="WY"
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data$Rank <- row.names(ranked_data)
## Define rank for worst and best scenario
if (num == "best") num <- 1
num="worst"
if (num == "worst") num <- nrow(ranked_data)
View(ranked_data)
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
all_data <- read.csv("C:/Users/Felix/Desktop/coursera/R/week 4/outcome-of-care-measures.csv")
outcome="pneumonia"
if (outcome == "pneumonia") all_data <- all_data[,c(2,7,23)]
colnames(all_data) <- c('Hospital.Name','State','Rate')
all_data$Hospital.Name <- as.character(as.character(all_data$Hospital.Name))
all_data$State <- as.character(as.character(all_data$State))
all_data$Rate <- as.numeric(as.character(all_data$Rate))
# Create list with all states
all_states <- as.character(as.character(unique(all_data$State)))
all_states <- all_states[order(all_states) ]
## Rank data
ranked_data <- all_data[all_data$State == i,]
ranked_data <- ranked_data[order(ranked_data$Rate, ranked_data$Hospital.Name), ]
View(ranked_data)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='fkessel', token='650E09BBF88105F00D8CF18E7CBF7912', secret='b5OG5b1zA8f/OgaUhs11wLyYbrKMA/J19cnzAQGm')
library(shinyapps)
shinyapps::deployApp('C:\\Users\\Felix\\Desktop\\coursera\\DataDrivenProducts')
this.dir <- dirname(parent.frame(2)$ofile)
runApp()
library(shiny)
runApp()
setwd("./")
runApp()
setwd("C:\\Users\\Felix\\Desktop\\coursera\\DataDrivenProducts\\App")
runApp()
shinyapps::deployApp('C:\\Users\\Felix\\Desktop\\coursera\\DataDrivenProducts\\App')
